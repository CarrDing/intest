/*
 * Generated by ASN.1 Java Compiler (http://www.asnlab.org/)
 * From ASN.1 module "INTEST"
 */
package com.intest.asn;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Null;

import org.asnlab.asndt.runtime.conv.AnnotationCompositeConverter;
import org.asnlab.asndt.runtime.conv.AsnConverter;
import org.asnlab.asndt.runtime.conv.CompositeConverter;
import org.asnlab.asndt.runtime.conv.EncodingRules;
import org.asnlab.asndt.runtime.conv.IntegerConverter;
import org.asnlab.asndt.runtime.conv.annotation.Component;
import org.asnlab.asndt.runtime.type.AsnType;

public class RmtControlRsp {

	@Null
	@Min(0L) @Max(255L)
	@Component(0)
	public Integer reportRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(255L)
	@Component(1)
	public Integer rebootRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(255L)
	@Component(2)
	public Integer resetDistRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(255L)
	@Component(3)
	public Integer calibrateRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(255L)
	@Component(4)
	public Integer vCanCardRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(255L)
	@Component(5)
	public Integer accumVarRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(255L)
	@Component(6)
	public Integer delFileRsp;	/* OPTIONAL */


	public boolean equals(Object obj) {
		if(!(obj instanceof RmtControlRsp)){
			return false;
		}
		return TYPE.equals(this, obj, CONV);
	}

	public void der_encode(OutputStream out) throws IOException {
		TYPE.encode(this, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV, out);
	}

	public static RmtControlRsp der_decode(InputStream in) throws IOException {
		return (RmtControlRsp)TYPE.decode(in, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV);
	}


	public final static AsnType TYPE = INTEST.type(65567);

	public final static CompositeConverter CONV;

	static {
		CONV = new AnnotationCompositeConverter(RmtControlRsp.class);
		AsnConverter reportRspConverter = IntegerConverter.INSTANCE;
		AsnConverter rebootRspConverter = IntegerConverter.INSTANCE;
		AsnConverter resetDistRspConverter = IntegerConverter.INSTANCE;
		AsnConverter calibrateRspConverter = IntegerConverter.INSTANCE;
		AsnConverter vCanCardRspConverter = IntegerConverter.INSTANCE;
		AsnConverter accumVarRspConverter = IntegerConverter.INSTANCE;
		AsnConverter delFileRspConverter = IntegerConverter.INSTANCE;
		CONV.setComponentConverters(new AsnConverter[] { reportRspConverter, rebootRspConverter, resetDistRspConverter, calibrateRspConverter, vCanCardRspConverter, accumVarRspConverter, delFileRspConverter });
	}


}
