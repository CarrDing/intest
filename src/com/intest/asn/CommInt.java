/*
 * Generated by ASN.1 Java Compiler (http://www.asnlab.org/)
 * From ASN.1 module "INTEST"
 */
package com.intest.asn;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.validation.constraints.NotNull;

import org.asnlab.asndt.runtime.conv.AnnotationCompositeConverter;
import org.asnlab.asndt.runtime.conv.AsnConverter;
import org.asnlab.asndt.runtime.conv.CompositeConverter;
import org.asnlab.asndt.runtime.conv.EncodingRules;
import org.asnlab.asndt.runtime.conv.LongConverter;
import org.asnlab.asndt.runtime.conv.annotation.Component;
import org.asnlab.asndt.runtime.type.AsnType;

public class CommInt {

	@NotNull
	@Component(0)
	public Long sendInt;

	@NotNull
	@Component(1)
	public Long sendTotalTime;


	public boolean equals(Object obj) {
		if(!(obj instanceof CommInt)){
			return false;
		}
		return TYPE.equals(this, obj, CONV);
	}

	public void der_encode(OutputStream out) throws IOException {
		TYPE.encode(this, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV, out);
	}

	public static CommInt der_decode(InputStream in) throws IOException {
		return (CommInt)TYPE.decode(in, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV);
	}


	public final static AsnType TYPE = INTEST.type(65545);

	public final static CompositeConverter CONV;

	static {
		CONV = new AnnotationCompositeConverter(CommInt.class);
		AsnConverter sendIntConverter = LongConverter.INSTANCE;
		AsnConverter sendTotalTimeConverter = LongConverter.INSTANCE;
		CONV.setComponentConverters(new AsnConverter[] { sendIntConverter, sendTotalTimeConverter });
	}


}
