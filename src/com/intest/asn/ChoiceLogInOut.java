/*
 * Generated by ASN.1 Java Compiler (http://www.asnlab.org/)
 * From ASN.1 module "INTEST"
 */
package com.intest.asn;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;

import org.asnlab.asndt.runtime.conv.AnnotationChoiceConverter;
import org.asnlab.asndt.runtime.conv.AsnConverter;
import org.asnlab.asndt.runtime.conv.BooleanConverter;
import org.asnlab.asndt.runtime.conv.ChoiceConverter;
import org.asnlab.asndt.runtime.conv.EncodingRules;
import org.asnlab.asndt.runtime.conv.LongConverter;
import org.asnlab.asndt.runtime.conv.annotation.Alternative;
import org.asnlab.asndt.runtime.type.AsnType;

public class ChoiceLogInOut {

	public static final int loginReqChosen = 0;
	public static final int loginRspChosen = 1;
	public static final int logoutReqChosen = 2;

	public final int choiceID;

	@Alternative(0)
	public final Login loginReq;

	@Min(0L) @Max(4294967295L)
	@Alternative(1)
	public final Long loginRsp;

	@Alternative(2)
	public final Boolean logoutReq;


	private ChoiceLogInOut(int choiceID, Login loginReq, Long loginRsp, Boolean logoutReq) {
		this.choiceID = choiceID;
		this.loginReq = loginReq;
		this.loginRsp = loginRsp;
		this.logoutReq = logoutReq;
	}

	public static ChoiceLogInOut loginReq(Login loginReq) {
		return new ChoiceLogInOut(loginReqChosen, loginReq, null, null);
	}

	public static ChoiceLogInOut loginRsp(Long loginRsp) {
		return new ChoiceLogInOut(loginRspChosen, null, loginRsp, null);
	}

	public static ChoiceLogInOut logoutReq(Boolean logoutReq) {
		return new ChoiceLogInOut(logoutReqChosen, null, null, logoutReq);
	}

	public boolean equals(Object obj) {
		if(!(obj instanceof ChoiceLogInOut)){
			return false;
		}
		return TYPE.equals(this, obj, CONV);
	}

	public void der_encode(OutputStream out) throws IOException {
		TYPE.encode(this, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV, out);
	}

	public static ChoiceLogInOut der_decode(InputStream in) throws IOException {
		return (ChoiceLogInOut)TYPE.decode(in, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV);
	}


	public final static AsnType TYPE = INTEST.type(65539);

	public final static ChoiceConverter CONV;

	static {
		CONV = new AnnotationChoiceConverter(ChoiceLogInOut.class);
		AsnConverter loginReqConverter = Login.CONV;
		AsnConverter loginRspConverter = LongConverter.INSTANCE;
		AsnConverter logoutReqConverter = BooleanConverter.INSTANCE;
		CONV.setAlternativeConverters(new AsnConverter[] { loginReqConverter, loginRspConverter, logoutReqConverter });
	}


}
