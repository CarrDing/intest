/*
 * Generated by ASN.1 Java Compiler (http://www.asnlab.org/)
 * From ASN.1 module "INTEST"
 */
package com.intest.asn;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Null;
import javax.validation.constraints.Size;

import org.asnlab.asndt.runtime.conv.AnnotationCompositeConverter;
import org.asnlab.asndt.runtime.conv.AsnConverter;
import org.asnlab.asndt.runtime.conv.BooleanConverter;
import org.asnlab.asndt.runtime.conv.CompositeConverter;
import org.asnlab.asndt.runtime.conv.EncodingRules;
import org.asnlab.asndt.runtime.conv.IntegerConverter;
import org.asnlab.asndt.runtime.conv.OctetStringConverter;
import org.asnlab.asndt.runtime.conv.annotation.Component;
import org.asnlab.asndt.runtime.type.AsnType;

public class ParaQueryRsp {

	@Null
	@Component(0)
	public IntRsp intRsp;	/* OPTIONAL */

	@Null
	@Component(1)
	public LinkRsp link1Rsp;	/* OPTIONAL */

	@Null
	@Component(2)
	public LinkRsp link2Rsp;	/* OPTIONAL */

	@Null
	@Component(3)
	public Boolean link2EnRsp;	/* OPTIONAL */

	@Null
	@Size(min=17, max=17)
	@Component(4)
	public byte[] vinRsp;	/* OPTIONAL */

	@Null
	@Component(5)
	public DestRsp destRsp;	/* OPTIONAL */

	@Null
	@Component(6)
	public BoundData boundRsp;	/* OPTIONAL */

	@Null
	@Component(7)
	public byte[] dbcNameRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(4L)
	@Component(8)
	public Integer sysRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(100L)
	@Component(9)
	public Integer sdHzRsp;	/* OPTIONAL */

	@Null
	@Component(10)
	public byte[] authKeyRsp;	/* OPTIONAL */

	@Null
	@Component(11)
	public CommInt commIntRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(1L)
	@Component(12)
	public Integer canlogModeRsp;	/* OPTIONAL */

	@Null
	@Min(0L) @Max(65535L)
	@Component(13)
	public Integer canlogTimeRsp;	/* OPTIONAL */

	@Null
	@Component(14)
	public CustNameRsp custNameRsp;	/* OPTIONAL */

	@Null
	@Component(15)
	public SDCap sdCapRsp;	/* OPTIONAL */

	@Null
	@Component(16)
	public SDDirFile fileDirRsp;	/* OPTIONAL */

	@Null
	@Component(17)
	public SDFileData upFileRsp;	/* OPTIONAL */


	public boolean equals(Object obj) {
		if(!(obj instanceof ParaQueryRsp)){
			return false;
		}
		return TYPE.equals(this, obj, CONV);
	}

	public void der_encode(OutputStream out) throws IOException {
		TYPE.encode(this, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV, out);
	}

	public static ParaQueryRsp der_decode(InputStream in) throws IOException {
		return (ParaQueryRsp)TYPE.decode(in, EncodingRules.DISTINGUISHED_ENCODING_RULES, CONV);
	}


	public final static AsnType TYPE = INTEST.type(65557);

	public final static CompositeConverter CONV;

	static {
		CONV = new AnnotationCompositeConverter(ParaQueryRsp.class);
		AsnConverter intRspConverter = IntRsp.CONV;
		AsnConverter link1RspConverter = LinkRsp.CONV;
		AsnConverter link2RspConverter = LinkRsp.CONV;
		AsnConverter link2EnRspConverter = BooleanConverter.INSTANCE;
		AsnConverter vinRspConverter = OctetStringConverter.INSTANCE;
		AsnConverter destRspConverter = DestRsp.CONV;
		AsnConverter boundRspConverter = BoundData.CONV;
		AsnConverter dbcNameRspConverter = OctetStringConverter.INSTANCE;
		AsnConverter sysRspConverter = IntegerConverter.INSTANCE;
		AsnConverter sdHzRspConverter = IntegerConverter.INSTANCE;
		AsnConverter authKeyRspConverter = OctetStringConverter.INSTANCE;
		AsnConverter commIntRspConverter = CommInt.CONV;
		AsnConverter canlogModeRspConverter = IntegerConverter.INSTANCE;
		AsnConverter canlogTimeRspConverter = IntegerConverter.INSTANCE;
		AsnConverter custNameRspConverter = CustNameRsp.CONV;
		AsnConverter sdCapRspConverter = SDCap.CONV;
		AsnConverter fileDirRspConverter = SDDirFile.CONV;
		AsnConverter upFileRspConverter = SDFileData.CONV;
		CONV.setComponentConverters(new AsnConverter[] { intRspConverter, link1RspConverter, link2RspConverter, link2EnRspConverter, vinRspConverter, destRspConverter, boundRspConverter, dbcNameRspConverter, sysRspConverter, sdHzRspConverter, authKeyRspConverter, commIntRspConverter, canlogModeRspConverter, canlogTimeRspConverter, custNameRspConverter, sdCapRspConverter, fileDirRspConverter, upFileRspConverter });
	}


}
